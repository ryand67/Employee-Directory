{"version":3,"sources":["components/SearchBar.js","components/ListItem.js","util/api.js","App.js","index.js"],"names":["SearchBar","props","className","id","type","placeholder","aria-label","aria-describedby","onChange","event","handleChange","ListItem","name","email","address","obj","search","axios","get","App","state","employees","renderList","sort","compare","a","b","first","setState","target","value","employeeSearch","newList","filter","employee","last","toLowerCase","substr","length","sortEmployees","console","log","API","then","res","data","this","onClick","map","item","fullName","key","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAceA,EAXG,SAACC,GACf,OACI,yBAAKC,UAAU,6CACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBC,GAAG,kBAAtC,WAEJ,2BAAOC,KAAK,OAAOF,UAAU,eAAeG,YAAY,iBAAiBC,aAAW,WAAWC,mBAAiB,iBAAiBC,SAAU,SAACC,GAAD,OAAWR,EAAMS,aAAaD,QCItKE,EAVE,SAACV,GACd,OACI,yBAAKC,UAAU,sDACX,4BAAKD,EAAMW,MACX,4BAAKX,EAAMY,OACX,4BAAKZ,EAAMa,W,yBCCRC,EANH,CACRC,OAAQ,WACJ,OAAOC,IAAMC,IAAI,6ECiGVC,E,4MA7FbC,MAAQ,CACNC,UAAW,GACXL,OAAQ,GACRM,WAAY,GACZC,KAAM,I,EAYRC,QAAU,SAAEC,EAAGC,GACb,MAAuB,KAApB,EAAKN,MAAMG,MAAmC,SAApB,EAAKH,MAAMG,KACjCE,EAAEE,MAAQD,EAAEC,OACP,EAELF,EAAEE,MAAQD,EAAEC,MACR,EAEF,EAEFF,EAAEE,MAAQD,EAAEC,MACR,EAEJF,EAAEE,MAAQD,EAAEC,OACP,EAEH,G,EAKXjB,aAAe,SAACD,GACd,EAAKmB,SAAS,CAAEZ,OAAQP,EAAMoB,OAAOC,QAAS,WAC5C,EAAKC,qB,EAKTA,eAAiB,WACf,IAAIC,EAAU,EAAKZ,MAAMC,UAAUY,QAAO,SAAAC,GAGxC,MAFY,UAAMA,EAASP,MAAf,YAAwBO,EAASC,MAEjCC,cAAcC,OAAO,EAAG,EAAKjB,MAAMJ,OAAOsB,UAAY,EAAKlB,MAAMJ,OAAOoB,cAAcC,OAAO,EAAG,EAAKjB,MAAMJ,OAAOsB,WAOhI,EAAKV,SAAS,CAAEN,WAAYU,K,EAI9BO,cAAgB,WACd,GAAuB,KAApB,EAAKnB,MAAMG,MAAmC,SAApB,EAAKH,MAAMG,KAAiB,CACvD,IAAIS,EAAU,EAAKZ,MAAME,WAAWC,KAAK,EAAKC,SAC9C,EAAKI,SAAS,CAAEL,KAAM,QACtB,EAAKK,SAAS,CAAEN,WAAYU,IAAW,kBAAMQ,QAAQC,IAAI,EAAKrB,MAAME,mBAC/D,CACL,IAAIU,EAAU,EAAKZ,MAAME,WAAWC,KAAK,EAAKC,SAC9C,EAAKI,SAAS,CAAEL,KAAM,SACtB,EAAKK,SAAS,CAAEN,WAAYU,IAAW,kBAAMQ,QAAQC,IAAI,EAAKrB,MAAME,iB,kEA3DnD,IAAD,OAClBoB,EAAI1B,SAAS2B,MAAK,SAAAC,GAChB,EAAKhB,SAAS,CAAEP,UAAWuB,EAAIC,OAC/B,EAAKjB,SAAS,CAAEN,WAAYsB,EAAIC,Y,+BA6DlC,OACE,yBAAK3C,UAAU,eACb,yBAAKA,UAAU,WACf,wBAAIA,UAAU,oBAAd,sBAEA,kBAAC,EAAD,CAAWQ,aAAcoC,KAAKpC,eAC9B,yBAAKR,UAAU,wDACb,wBAAIA,UAAU,0BAA0B6C,QAASD,KAAKP,eAAtD,QACA,wBAAIrC,UAAU,eAAd,SACA,wBAAIA,UAAU,eAAd,YAGD4C,KAAK1B,MAAME,WAAW0B,KAAI,SAAAC,GACzB,IAAIC,EAAQ,UAAMD,EAAKtB,MAAX,YAAoBsB,EAAKd,MACrC,OAAO,kBAAC,EAAD,CAAUvB,KAAMsC,EAAUC,IAAKD,EAAUrC,MAAOoC,EAAKpC,MAAOC,QAASmC,EAAKnC,kB,GAzFzEsC,aCDlBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.d3df7651.chunk.js","sourcesContent":["import React from 'react';\n\n//Returns a div with a search bar, and passes in appropriate methods for change handling\nconst SearchBar = (props) => {\n    return (\n        <div className=\"input-group flex-nowrap w-25 mx-auto my-5\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"addon-wrapping\">Search</span>\n            </div>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Search by name\" aria-label=\"Username\" aria-describedby=\"addon-wrapping\" onChange={(event) => props.handleChange(event)}/>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from 'react';\n\n//Returns a div with the employee info\nconst ListItem = (props) => {\n    return(\n        <div className=\"listItem d-flex justify-content-around text-center\">\n            <h4>{props.name}</h4>\n            <h4>{props.email}</h4>\n            <h4>{props.address}</h4>\n        </div>\n    )\n}\n\nexport default ListItem;","import axios from 'axios';\n\n//Return array of fake people\nconst obj = {\n    search: () => {\n        return axios.get('https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole')\n    }\n}\n\nexport default obj;","import React, { Component } from 'react';\nimport SearchBar from './components/SearchBar'\nimport ListItem from './components/ListItem'\nimport './style.css'\nimport API from './util/api';\n\nclass App extends Component {\n\n  //States for employees, search status, the list to be rendered, and sort direction\n  state = { \n    employees: [],\n    search: \"\",\n    renderList: [],\n    sort: \"\"\n  }  \n\n  //When the component loads, grab the employee data and set the initial states full of employee objects\n  componentDidMount() {\n    API.search().then(res => {\n      this.setState({ employees: res.data });\n      this.setState({ renderList: res.data });\n    });\n  }\n\n  //Function compares two employee objects and returns which name comes after the other\n  compare = ( a, b ) => {\n    if(this.state.sort === \"\" || this.state.sort === \"DESC\") {\n      if ( a.first < b.first ){\n        return -1;\n      }\n      if ( a.first > b.first ){\n        return 1;\n      }\n      return 0;\n    } else {\n      if ( a.first < b.first ){\n        return 1;\n      }\n      if ( a.first > b.first ){\n        return -1;\n      }\n      return 0;\n    }\n  }\n\n  //When someone types in the search bar, update the search state, and then run the employee search function\n  handleChange = (event) => {\n    this.setState({ search: event.target.value }, () => {\n      this.employeeSearch();\n    });\n  }\n\n  //Filters the emplyoyees by the search state into a variable\n  employeeSearch = () => {\n    let newList = this.state.employees.filter(employee => {\n      let fullName = `${employee.first} ${employee.last}`;\n      //If the search state and the first letters of the name match return true/false\n      if(fullName.toLowerCase().substr(0, this.state.search.length) === this.state.search.toLowerCase().substr(0, this.state.search.length)) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n    //Set the rendered list to the new list\n    this.setState({ renderList: newList });\n  }\n\n  //Sort the employees based on which direction it's already been sorted\n  sortEmployees = () => {\n    if(this.state.sort === \"\" || this.state.sort === \"DESC\") {\n      let newList = this.state.renderList.sort(this.compare);\n      this.setState({ sort: \"ASC\" });\n      this.setState({ renderList: newList }, () => console.log(this.state.renderList))\n    } else {\n      let newList = this.state.renderList.sort(this.compare);\n      this.setState({ sort: \"DESC\" });\n      this.setState({ renderList: newList }, () => console.log(this.state.renderList))\n    }\n  }\n\n  render() { \n    return ( \n      <div className=\"w-100 h-100\">\n        <div className=\"topBox\"></div>\n        <h1 className=\"text-center mt-5\">EMPLOYEE DIRECTORY</h1>\n        {/* Render the search bar passing in the handleChange method */}\n        <SearchBar handleChange={this.handleChange}/>\n        <div className=\"listHeader d-flex justify-content-around text-center\">\n          <h2 className=\"listHeading nameHeading\" onClick={this.sortEmployees}>Name</h2>\n          <h2 className=\"listHeading\">Email</h2>\n          <h2 className=\"listHeading\">Address</h2>\n        </div>\n        {/* For every object in the employee list make a new List Item component */}\n        {this.state.renderList.map(item => {\n          let fullName = `${item.first} ${item.last}`\n          return <ListItem name={fullName} key={fullName} email={item.email} address={item.address} />\n        })}\n      </div>\n     );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}